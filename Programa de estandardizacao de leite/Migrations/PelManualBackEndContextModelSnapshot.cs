// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PelManualBackEnd.Context;

namespace Programa_de_estandardizacao_de_leite.Migrations
{
    [DbContext(typeof(PelManualBackEndContext))]
    partial class PelManualBackEndContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PelManualBackEnd.Models.Analise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("Densidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("DepositoNome")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Gordura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Snf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepositoNome")
                        .IsUnique()
                        .HasFilter("[DepositoNome] IS NOT NULL");

                    b.ToTable("analise");
                });

            modelBuilder.Entity("PelManualBackEnd.Models.Depositos", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Capacidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Nome");

                    b.ToTable("depositos");
                });

            modelBuilder.Entity("PelManualBackEnd.Models.Formulas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("Acucar")
                        .HasColumnType("float");

                    b.Property<double>("FatorAcucarMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("FatorAcucarMin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("FatorAcucarObj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Gordura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("RfMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("RfMin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("RfObj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("Id");

                    b.ToTable("formulas");
                });

            modelBuilder.Entity("PelManualBackEnd.Models.MateriasPrimas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("vazio");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("vazio");

                    b.Property<string>("Nome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("vazio");

                    b.Property<string>("Procedencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("vazio");

                    b.HasKey("Id");

                    b.ToTable("materias_primas");
                });

            modelBuilder.Entity("PelManualBackEnd.Models.Mensagem", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Texto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("mensagem");
                });

            modelBuilder.Entity("PelManualBackEnd.Models.ResumoTl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CodigoMateriaPrima")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMateriaPrima")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeTanque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("QuantidadeMateriaPrima")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ResumoTls");
                });

            modelBuilder.Entity("PelManualBackEnd.Models.Tl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Acidez")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoCarreta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoMateriaPrima")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Crioscopia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Densidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gordura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("KilosRecebidos")
                        .HasColumnType("float");

                    b.Property<string>("MateriaPrima")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotaFiscal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Snf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tanque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transportadora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tl");
                });

            modelBuilder.Entity("PelManualBackEnd.Models.Analise", b =>
                {
                    b.HasOne("PelManualBackEnd.Models.Depositos", "Depositos")
                        .WithOne("Analise")
                        .HasForeignKey("PelManualBackEnd.Models.Analise", "DepositoNome")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Depositos");
                });

            modelBuilder.Entity("PelManualBackEnd.Models.Depositos", b =>
                {
                    b.Navigation("Analise");
                });
#pragma warning restore 612, 618
        }
    }
}
